configuration {
    neural
}
enumerations {
    'yes', 'no'
}

constants {
}

variables {
    variable {
	bl
	x
	VAR
	[0, 3]
	assign { result {0}}
    }
    variable {
	bl
	y
	VAR
	[0, 3]
	assign {result {1}}
    }
    variable {
	bl
	z
	VAR
	{'yes', 'no'}
	assign{result{'yes'}}
    }
    variable { bl network NEURAL classification {'yes', 'no'} inputs {x, y}
	config {
	    fixed 10 6
	}
	source {
	    './y_net.onnx'
	}
    }
}

environment_update {
}

checks {
}

environment_checks {
}

actions {
    action {
	act
	arguments{}
	local_variables{}
	read_variables{network}
	write_variables{x, y, z}
	initial_values{}
	update{
	    variable_statement{
		z
		assign{result{network}}
	    }
	    variable_statement{
		x
		assign{result{(min, 3, (add, x, 1))}}
	    }
	    variable_statement{
		y
		assign{result{(min, 3, (add, y, 1))}}
	    }
	    return_statement{result{success}}
	}
    }	    
}


sub_trees {
}

tree {
    act {}
}

tick_prerequisite {
    True
}

specifications {
}