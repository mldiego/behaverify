MODULE main
    VAR
        system : system_module;
--------------SPECIFICATIONS

CTLSPEC AG(AF(((system.x_d_stage_1 = system.x_g_stage_0) & (system.y_d_stage_1 = system.y_g_stage_0))));
CTLSPEC AG(EF(((system.x_d_stage_1 = system.x_g_stage_0) & (system.y_d_stage_1 = system.y_g_stage_0))));

--------------END OF SPECIFICATIONS

MODULE system_module
    CONSTANTS
        success, failure, running, invalid, XX, Ea, No, So, We;
    DEFINE
        resume_from_here_in_subtree__Drone := -3;
        Drone.active := (TRUE);
        --START OF BLACKBOARD DEFINITIONS
        act_stage_1 :=
            case
                !(NewGoal.active) : act_stage_0;
                TRUE : XX;
            esac;
        new_stage_1 :=
            case
                !(NewGoal.active) : new_stage_0;
                TRUE : TRUE;
            esac;
        new_stage_2 :=
            case
                !(NextAct.active) : new_stage_1;
                TRUE : FALSE;
            esac;
        x_d_stage_1 :=
            case
                !(Drone.active) : x_d_stage_0;
                (act_stage_2 = We) : max(0, (x_d_stage_0 - 1));
                (act_stage_2 = Ea) : min(19, (x_d_stage_0 + 1));
                TRUE : x_d_stage_0;
            esac;
        y_d_stage_1 :=
            case
                !(Drone.active) : y_d_stage_0;
                (act_stage_2 = So) : max(0, (y_d_stage_0 - 1));
                (act_stage_2 = No) : min(19, (y_d_stage_0 + 1));
                TRUE : y_d_stage_0;
            esac;
        --END OF BLACKBOARD DEFINITIONS
    VAR
        node_names : define_nodes;
        NeedNew : NeedNew_module(x_d_stage_0, x_g_stage_0, y_d_stage_0, y_g_stage_0);
        NewGoal : running_DEFAULT_module();
        GoalSeq : composite_sequence_without_memory_2(NeedNew, NewGoal);
        NextAct : success_DEFAULT_module();
        Drone : composite_selector_without_memory_2(GoalSeq, NextAct);
        --START OF BLACKBOARD VARIABLES DECLARATION
        act_stage_0 : {XX, Ea, No, So, We};
        act_stage_2 : {XX, Ea, No, So, We};
        new_stage_0 : boolean;
        x_d_stage_0 : 0..19;
        y_d_stage_0 : 0..19;
        x_g_stage_0 : 0..19;
        y_g_stage_0 : 0..19;
        --END OF BLACKBOARD VARIABLES DECLARATION
    ASSIGN
        --START OF BLACKBOARD VARIABLES INITIALIZATION
        init(act_stage_0) := XX;
        init(new_stage_0) := FALSE;
        init(x_d_stage_0) := 0;
        init(y_d_stage_0) := 0;
        init(x_g_stage_0) := x_d_stage_0;
        init(y_g_stage_0) := y_d_stage_0;
        --END OF BLACKBOARD VARIABLES INITIALIZATION
        --START OF BLACKBOARD VARIABLES TRANSITION
        next(act_stage_0) := act_stage_2;
        act_stage_2 :=
            case
                !(NextAct.active) : act_stage_1;
                TRUE : {No, So, We, Ea};
            esac;
        next(new_stage_0) := new_stage_2;
        next(x_d_stage_0) := x_d_stage_1;
        next(y_d_stage_0) := y_d_stage_1;
        next(x_g_stage_0) :=
            case
                !(Drone.active) : x_g_stage_0;
                new_stage_2 : {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
                TRUE : x_g_stage_0;
            esac;
        next(y_g_stage_0) :=
            case
                !(Drone.active) : y_g_stage_0;
                new_stage_2 : {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
                TRUE : y_g_stage_0;
            esac;
        --END OF BLACKBOARD VARIABLES TRANSITION

MODULE define_nodes
    DEFINE
        Drone := 0;
        GoalSeq := 1;
        NeedNew := 2;
        NewGoal := 3;
        NextAct := 4;
MODULE composite_selector_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = failure) : child_0.internal_status;
                !(child_1.internal_status = failure) : child_1.internal_status;
                TRUE : failure;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = failure;
MODULE composite_sequence_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = success) : child_0.internal_status;
                !(child_1.internal_status = success) : child_1.internal_status;
                TRUE : success;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = success;
MODULE NeedNew_module(x_d_stage_0, x_g_stage_0, y_d_stage_0, y_g_stage_0)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := (((x_g_stage_0 = x_d_stage_0) & (y_g_stage_0 = y_d_stage_0))) ? success : failure;
MODULE running_DEFAULT_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := running;
MODULE success_DEFAULT_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := success;
